/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/main_CYCLES_graph_classification.py:319: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  num_classes = len(np.unique(np.array(dataset.train[:][1])))
/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/main_CYCLES_graph_classification.py:319: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  num_classes = len(np.unique(np.array(dataset.train[:][1])))
[I] Loading dataset CYCLES...
train, test, val sizes : 9000 10000 1000
[I] Finished loading.
[I] Data load time: 12.6076s
using 5 automata/automaton
Traceback (most recent call last):
  File "/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/main_CYCLES_graph_classification.py", line 342, in <module>
    main(args) 
  File "/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/main_CYCLES_graph_classification.py", line 333, in main
    net_params['total_param'] = view_model_param(MODEL_NAME, net_params, gnn_model, logger)
  File "/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/utils/main_utils.py", line 51, in view_model_param
    model = gnn_model(MODEL_NAME, net_params)
  File "/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/nets/CYCLES_graph_classification/load_net.py", line 31, in gnn_model
    return models[MODEL_NAME](net_params)
  File "/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/nets/CYCLES_graph_classification/load_net.py", line 18, in GraphTransformer
    return GraphTransformerNet(net_params)
  File "/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/nets/CYCLES_graph_classification/graph_transformer.py", line 57, in __init__
    self.ll = nn.Linear(hidden_dim - net_params['pos_enc_dim'], hidden_dim,)
  File "/afs/crc.nd.edu/user/p/psoga/.conda/envs/gnn/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 96, in __init__
    self.weight = Parameter(torch.empty((out_features, in_features), **factory_kwargs))
RuntimeError: Trying to create tensor with negative dimension -48: [80, -48]
