cuda available with GPU: NVIDIA GeForce GTX 1080 Ti
[I] Loading dataset SBM_PATTERN...
train, test, val sizes : 10000 2000 2000
[I] Finished loading.
[I] Data load time: 16.8858s
Using learned automata position encoding
Using 120 dimension positional encoding
MODEL DETAILS:

MODEL/Total parameters: GraphTransformer 574302
Training Graphs:  10000
Validation Graphs:  2000
Test Graphs:  2000
Number of Classes:  2
Using learned automata position encoding
Using 120 dimension positional encoding
  0%|          | 0/1000 [00:00<?, ?it/s]Epoch 0:   0%|          | 0/1000 [00:00<?, ?it/s]Epoch 0:   0%|          | 0/1000 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/train/train_SBMs_node_classification.py", line 29, in train_epoch_sparse
    batch_pos_enc = batch_graphs.ndata['pos_enc'].to(device)
  File "/afs/crc.nd.edu/user/p/psoga/.conda/envs/gnn/lib/python3.10/site-packages/dgl/view.py", line 67, in __getitem__
    return self._graph._get_n_repr(self._ntid, self._nodes)[key]
  File "/afs/crc.nd.edu/user/p/psoga/.conda/envs/gnn/lib/python3.10/site-packages/dgl/frame.py", line 523, in __getitem__
    return self._columns[name].data
KeyError: 'pos_enc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/main_SBMs_node_classification.py", line 438, in <module>
    main()    
  File "/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/main_SBMs_node_classification.py", line 430, in main
    train_val_pipeline(MODEL_NAME, dataset, params, net_params, dirs)
  File "/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/main_SBMs_node_classification.py", line 175, in train_val_pipeline
    epoch_train_loss, epoch_train_acc, optimizer = train_epoch(model, optimizer, device, train_loader, epoch)
  File "/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/train/train_SBMs_node_classification.py", line 35, in train_epoch_sparse
    batch_scores = model.forward(batch_graphs, batch_x, batch_e)
  File "/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/nets/SBMs_node_classification/graph_transformer.py", line 52, in forward
    h = self.pe_layer(g, h, pos_enc)
  File "/afs/crc.nd.edu/user/p/psoga/.conda/envs/gnn/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/layers/pe_layer.py", line 81, in forward
    kron_prod = torch.kron(A.t().contiguous(), self.pos_transition).to(self.device)
RuntimeError: CUDA out of memory. Tried to allocate 76.73 GiB (GPU 0; 10.92 GiB total capacity; 14.87 MiB already allocated; 10.41 GiB free; 26.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
