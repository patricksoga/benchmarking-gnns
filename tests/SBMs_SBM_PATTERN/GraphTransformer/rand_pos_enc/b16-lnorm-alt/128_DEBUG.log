2022-08-17 14:41:10,971:main_utils.py:39 -            gpu_setup(): cuda available with GPU: NVIDIA GeForce GTX TITAN X
2022-08-17 14:41:28,267:main_SBMs_node_classification.py:300 -                 main(): {'L': 10, 'n_heads': 8, 'hidden_dim': 80, 'out_dim': 80, 'residual': True, 'readout': 'mean', 'in_feat_dropout': 0.0, 'dropout': 0.0, 'layer_norm': True, 'batch_norm': False, 'self_loop': False, 'wl_pos_enc': False, 'full_graph': False, 'gpu_id': 0, 'batch_size': 16, 'rand_pos_enc': True, 'pos_enc': False, 'adj_enc': False, 'dataset': 'SBM_PATTERN', 'matrix_type': 'A', 'pow_of_mat': 1, 'log_file': '/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/tests/SBMs_SBM_PATTERN/GraphTransformer/rand_pos_enc/b16-lnorm-alt/128_DEBUG.log', 'device': device(type='cuda'), 'pos_enc_dim': 128, 'in_dim': 3, 'n_classes': 2}
2022-08-17 14:41:28,268:main_SBMs_node_classification.py:301 -                 main(): {'seed': 41, 'epochs': 1000, 'batch_size': 16, 'init_lr': 0.0005, 'lr_reduce_factor': 0.5, 'lr_schedule_patience': 10, 'min_lr': 1e-06, 'weight_decay': 0.0, 'print_epoch_interval': 5, 'max_time': 24, 'job_num': 128}
2022-08-17 14:41:28,270:pe_layer.py:50 -             __init__(): rand_pos_enc
2022-08-17 14:41:29,635:pe_layer.py:83 -             __init__(): Using 128 dimension positional encoding (# states if an automata enc, otherwise smallest k eigvecs)
2022-08-17 14:41:29,635:pe_layer.py:88 -             __init__(): Using matrix: A
2022-08-17 14:41:29,635:pe_layer.py:89 -             __init__(): Matrix power: 1
2022-08-17 14:41:29,648:main_utils.py:53 -     view_model_param(): MODEL DETAILS:

2022-08-17 14:41:29,650:main_utils.py:58 -     view_model_param(): MODEL/Total parameters: GraphTransformer, 549574
2022-08-17 14:41:29,651:pe_layer.py:50 -             __init__(): rand_pos_enc
2022-08-17 14:41:29,652:pe_layer.py:83 -             __init__(): Using 128 dimension positional encoding (# states if an automata enc, otherwise smallest k eigvecs)
2022-08-17 14:41:29,653:pe_layer.py:88 -             __init__(): Using matrix: A
2022-08-17 14:41:29,653:pe_layer.py:89 -             __init__(): Matrix power: 1
2022-08-17 14:41:29,671:main_SBMs_node_classification.py:71 -   train_val_pipeline(): [!] Adding random automaton graph positional encoding (128).
2022-08-17 14:50:32,587:main_utils.py:39 -            gpu_setup(): cuda available with GPU: NVIDIA TITAN X (Pascal)
2022-08-17 14:50:51,226:main_SBMs_node_classification.py:300 -                 main(): {'L': 10, 'n_heads': 8, 'hidden_dim': 80, 'out_dim': 80, 'residual': True, 'readout': 'mean', 'in_feat_dropout': 0.0, 'dropout': 0.0, 'layer_norm': True, 'batch_norm': False, 'self_loop': False, 'wl_pos_enc': False, 'full_graph': False, 'gpu_id': 0, 'batch_size': 16, 'rand_pos_enc': True, 'pos_enc': False, 'adj_enc': False, 'dataset': 'SBM_PATTERN', 'matrix_type': 'A', 'pow_of_mat': 1, 'log_file': '/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/tests/SBMs_SBM_PATTERN/GraphTransformer/rand_pos_enc/b16-lnorm-alt/128_DEBUG.log', 'device': device(type='cuda'), 'pos_enc_dim': 128, 'in_dim': 3, 'n_classes': 2}
2022-08-17 14:50:51,226:main_SBMs_node_classification.py:301 -                 main(): {'seed': 41, 'epochs': 1000, 'batch_size': 16, 'init_lr': 0.0005, 'lr_reduce_factor': 0.5, 'lr_schedule_patience': 10, 'min_lr': 1e-06, 'weight_decay': 0.0, 'print_epoch_interval': 5, 'max_time': 24, 'job_num': 128}
2022-08-17 14:50:51,230:pe_layer.py:50 -             __init__(): rand_pos_enc
2022-08-17 14:50:52,646:pe_layer.py:83 -             __init__(): Using 128 dimension positional encoding (# states if an automata enc, otherwise smallest k eigvecs)
2022-08-17 14:50:52,646:pe_layer.py:88 -             __init__(): Using matrix: A
2022-08-17 14:50:52,646:pe_layer.py:89 -             __init__(): Matrix power: 1
2022-08-17 14:50:52,660:main_utils.py:53 -     view_model_param(): MODEL DETAILS:

2022-08-17 14:50:52,663:main_utils.py:58 -     view_model_param(): MODEL/Total parameters: GraphTransformer, 549574
2022-08-17 14:50:52,664:pe_layer.py:50 -             __init__(): rand_pos_enc
2022-08-17 14:50:52,665:pe_layer.py:83 -             __init__(): Using 128 dimension positional encoding (# states if an automata enc, otherwise smallest k eigvecs)
2022-08-17 14:50:52,666:pe_layer.py:88 -             __init__(): Using matrix: A
2022-08-17 14:50:52,666:pe_layer.py:89 -             __init__(): Matrix power: 1
2022-08-17 14:50:52,686:main_SBMs_node_classification.py:71 -   train_val_pipeline(): [!] Adding random automaton graph positional encoding (128).
