2022-09-06 12:06:51,377:main_utils.py:39 -            gpu_setup(): cuda available with GPU: NVIDIA GeForce GTX TITAN X
2022-09-06 12:07:07,607:main_SBMs_node_classification.py:344 -                 main(): {'L': 10, 'n_heads': 8, 'hidden_dim': 80, 'out_dim': 80, 'residual': True, 'readout': 'mean', 'in_feat_dropout': 0.0, 'dropout': 0.0, 'layer_norm': False, 'batch_norm': True, 'self_loop': False, 'wl_pos_enc': False, 'full_graph': False, 'gpu_id': 0, 'batch_size': 32, 'rand_pos_enc': True, 'rw_pos_enc': False, 'power_method': False, 'diag': False, 'pow_of_mat': 1, 'adj_enc': False, 'dataset': 'SBM_PATTERN', 'matrix_type': 'RWK', 'spectral_attn': False, 'cat_gape': False, 'gape_softmax_after': False, 'gape_softmax_before': False, 'gape_individual': False, 'log_file': '/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/tests/SBMs_SBM_PATTERN/GraphTransformer/rand_pos_enc/b32-bnorm-alt-rwk/64_DEBUG.log', 'device': device(type='cuda'), 'pos_enc_dim': 64, 'in_dim': 3, 'n_classes': 2}
2022-09-06 12:07:07,608:main_SBMs_node_classification.py:345 -                 main(): {'seed': 41, 'epochs': 1000, 'batch_size': 32, 'init_lr': 0.0005, 'lr_reduce_factor': 0.5, 'lr_schedule_patience': 10, 'min_lr': 1e-06, 'weight_decay': 0.0, 'print_epoch_interval': 5, 'max_time': 24, 'seed_array': [41], 'job_num': 64}
2022-09-06 12:07:07,608:pe_layer.py:65 -             __init__(): rand_pos_enc
2022-09-06 12:07:08,679:pe_layer.py:129 -             __init__(): Using 64 dimension positional encoding (# states if an automata enc, otherwise smallest k eigvecs)
2022-09-06 12:07:08,680:pe_layer.py:134 -             __init__(): Using matrix: RWK
2022-09-06 12:07:08,680:pe_layer.py:135 -             __init__(): Matrix power: 1
2022-09-06 12:07:08,693:main_utils.py:53 -     view_model_param(): MODEL DETAILS:

2022-09-06 12:07:08,695:main_utils.py:58 -     view_model_param(): MODEL/Total parameters: GraphTransformer, 532103
2022-09-06 12:07:08,696:pe_layer.py:65 -             __init__(): rand_pos_enc
2022-09-06 12:07:08,697:pe_layer.py:129 -             __init__(): Using 64 dimension positional encoding (# states if an automata enc, otherwise smallest k eigvecs)
2022-09-06 12:07:08,697:pe_layer.py:134 -             __init__(): Using matrix: RWK
2022-09-06 12:07:08,697:pe_layer.py:135 -             __init__(): Matrix power: 1
2022-09-06 12:07:08,717:main_SBMs_node_classification.py:89 -   train_val_pipeline(): [!] Adding random automaton graph positional encoding (64).
