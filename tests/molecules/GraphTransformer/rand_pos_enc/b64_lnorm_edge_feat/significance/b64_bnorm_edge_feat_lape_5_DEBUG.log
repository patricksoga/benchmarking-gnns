2022-08-18 00:03:31,378:main_utils.py:39 -            gpu_setup(): cuda available with GPU: Quadro RTX 6000
2022-08-18 00:03:44,417:main_molecules_graph_regression.py:294 -                 main(): {'num_train_data': 7000, 'L': 6, 'n_heads': 8, 'hidden_dim': 80, 'out_dim': 80, 'residual': True, 'readout': 'sum', 'in_feat_dropout': 0.0, 'dropout': 0.0, 'layer_norm': False, 'batch_norm': True, 'self_loop': False, 'pos_enc': True, 'learned_pos_enc': False, 'pos_enc_dim': 8, 'wl_pos_enc': False, 'full_graph': False, 'gpu_id': 0, 'batch_size': 64, 'edge_feat': True, 'adj_enc': False, 'dataset': 'ZINC', 'matrix_type': 'A', 'pow_of_mat': 1, 'log_file': '/afs/crc.nd.edu/user/p/psoga/benchmarking-gnns/tests/molecules/GraphTransformer/rand_pos_enc/b64_lnorm_edge_feat/significance/b64_bnorm_edge_feat_lape_5_DEBUG.log', 'device': device(type='cuda'), 'num_atom_type': 28, 'num_bond_type': 4}
2022-08-18 00:03:44,424:main_molecules_graph_regression.py:295 -                 main(): {'seed': 62, 'epochs': 1000, 'batch_size': 64, 'init_lr': 0.001, 'lr_reduce_factor': 0.5, 'lr_schedule_patience': 10, 'min_lr': 1e-06, 'weight_decay': 0.0, 'print_epoch_interval': 5, 'max_time': 24, 'job_num': 5}
2022-08-18 00:03:44,432:pe_layer.py:50 -             __init__(): pos_enc
2022-08-18 00:03:44,446:pe_layer.py:83 -             __init__(): Using 8 dimension positional encoding (# states if an automata enc, otherwise smallest k eigvecs)
2022-08-18 00:03:44,446:pe_layer.py:88 -             __init__(): Using matrix: A
2022-08-18 00:03:44,447:pe_layer.py:89 -             __init__(): Matrix power: 1
2022-08-18 00:03:44,459:main_utils.py:53 -     view_model_param(): MODEL DETAILS:

2022-08-18 00:03:44,461:main_utils.py:58 -     view_model_param(): MODEL/Total parameters: GraphTransformer, 552641
2022-08-18 00:03:44,461:pe_layer.py:50 -             __init__(): pos_enc
2022-08-18 00:03:44,462:pe_layer.py:83 -             __init__(): Using 8 dimension positional encoding (# states if an automata enc, otherwise smallest k eigvecs)
2022-08-18 00:03:44,462:pe_layer.py:88 -             __init__(): Using matrix: A
2022-08-18 00:03:44,462:pe_layer.py:89 -             __init__(): Matrix power: 1
2022-08-18 00:03:46,121:main_molecules_graph_regression.py:51 -   train_val_pipeline(): [!] Adding Laplacian graph positional encoding.
